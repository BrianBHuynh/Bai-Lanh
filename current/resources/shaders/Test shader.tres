[gd_resource type="VisualShader" load_steps=8 format=3 uid="uid://ogqs1m2lmstx"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_mnjfg"]
input_name = "color"

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_0qjt6"]
operator = 2

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_1rxn0"]
constant = Color(0.821911, 2.62313e-06, 7.70092e-07, 1)

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_jv323"]
default_input_values = [0, 0.0, 1, 200.0, 2, 0.0, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]
expanded_output_ports = [0]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_im0no"]
expanded_output_ports = [0]
input_name = "fragcoord"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_w72he"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeTransformVecMult" id="VisualShaderNodeTransformVecMult_ud8rt"]
default_input_values = [0, Transform3D(2, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0), 1, Vector3(0, 0, 0)]

[resource]
code = "shader_type canvas_item;
render_mode blend_add;




void vertex() {
// Input:2
	vec2 n_out2p0 = VERTEX;


// TransformVectorMult:3
	mat4 n_in3p0 = mat4(vec4(2.00000, 0.00000, 0.00000, 0.0), vec4(0.00000, 1.00000, 0.00000, 0.0), vec4(0.00000, 0.00000, 1.00000, 0.0), vec4(0.00000, 0.00000, 0.00000, 1.0));
	vec3 n_out3p0 = (n_in3p0 * vec4(vec3(n_out2p0, 0.0), 1.0)).xyz;


// Output:0
	VERTEX = vec2(n_out3p0.xy);


}

void fragment() {
// Input:6
	vec4 n_out6p0 = FRAGCOORD;
	float n_out6p2 = n_out6p0.g;


// Input:10
	vec4 n_out10p0 = COLOR;


// ColorConstant:4
	vec4 n_out4p0 = vec4(0.821911, 0.000003, 0.000001, 1.000000);


// ColorOp:11
	vec3 n_out11p0 = min(vec3(n_out10p0.xyz), vec3(n_out4p0.xyz));


	vec3 n_out5p0;
// If:5
	float n_in5p1 = 200.00000;
	float n_in5p2 = 0.00000;
	if(abs(n_out6p2 - n_in5p1) < n_in5p2)
	{
		n_out5p0 = vec3(n_out10p0.xyz);
	}
	else if(n_out6p2 < n_in5p1)
	{
		n_out5p0 = vec3(n_out10p0.xyz);
	}
	else
	{
		n_out5p0 = n_out11p0;
	}


// Output:0
	COLOR.rgb = n_out5p0;
	COLOR.a = n_out5p0.x;


}
"
mode = 1
modes/blend = 1
flags/light_only = false
nodes/vertex/2/node = SubResource("VisualShaderNodeInput_w72he")
nodes/vertex/2/position = Vector2(-200, 160)
nodes/vertex/3/node = SubResource("VisualShaderNodeTransformVecMult_ud8rt")
nodes/vertex/3/position = Vector2(100, 140)
nodes/vertex/connections = PackedInt32Array(2, 0, 3, 1, 3, 0, 0, 0)
nodes/fragment/0/position = Vector2(1600, 100)
nodes/fragment/4/node = SubResource("VisualShaderNodeColorConstant_1rxn0")
nodes/fragment/4/position = Vector2(360, 400)
nodes/fragment/5/node = SubResource("VisualShaderNodeIf_jv323")
nodes/fragment/5/position = Vector2(1040, 100)
nodes/fragment/6/node = SubResource("VisualShaderNodeInput_im0no")
nodes/fragment/6/position = Vector2(300, 80)
nodes/fragment/10/node = SubResource("VisualShaderNodeInput_mnjfg")
nodes/fragment/10/position = Vector2(280, 300)
nodes/fragment/11/node = SubResource("VisualShaderNodeColorOp_0qjt6")
nodes/fragment/11/position = Vector2(660, 380)
nodes/fragment/connections = PackedInt32Array(4, 0, 11, 1, 10, 0, 11, 0, 11, 0, 5, 4, 10, 0, 5, 3, 10, 0, 5, 5, 5, 0, 0, 1, 5, 0, 0, 0, 6, 2, 5, 0)
