[gd_scene load_steps=6 format=3 uid="uid://htmk0dy1pev0"]

[ext_resource type="Texture2D" uid="uid://lcbwrvrqghy7" path="res://current/cards/generic_mobs/uncommon/turtle_dog/turtle_dog.png" id="2_d4fxa"]
[ext_resource type="Script" path="res://current/scripts/common_scripts/player_data.gd" id="3_lb2m7"]

[sub_resource type="GDScript" id="GDScript_pk2hl"]
script/source = "extends Card

#region Card stats
@export var card_title: String = \"Turtle Dog\"

@export var card_health: float = 150.0 #Health amount of card
@export var card_phys_attack: int = 10 #physical Attack value of the card
@export var card_mag_attack: int = 10 #Magic attack value of the card
@export var card_phys_defense: int = 10 #Physical defense of the card
@export var card_mag_defense: int = 10 #Magical defense of the card
@export var card_speed: int = 10 #Speed of the card
@export var card_tags: Array[String] = []

#Modifiers for shifting, are added or subtracted from the normal stats when shifting
@export var card_shifted_health: float = 0.0
@export var card_shifted_phys_attack: int = 0
@export var card_shifted_mag_attack: int = 0
@export var card_shifted_phys_defense: int = 0
@export var card_shifted_mag_defense: int = 0
@export var card_shifted_speed: int = 0
@export var card_shifted_tags: Array[String] = []

#Stats changed for being in the prefered positions
@export var card_pos_health: float = 25
@export var card_pos_phys_attack: int = -1
@export var card_pos_mag_attack: int = -1
@export var card_pos_phys_defense: int = 2
@export var card_pos_mag_defense: int = 2
@export var card_pos_speed: int = -1
@export var card_pos_tags: Array[String] = []

#Position stats/effects should only be applied when the play button is pressed!
@export var card_pref_pos: Array[String] = [\"front\"] #Prefered possitions of the card

@export var card_default_color: Color = modulate #for default color
@export var card_default_size: Vector2 = Vector2(1,1) #Default size for the card

@export var card_shifted: bool = false
@export var card_friendly: bool = true
#endregion

#region Card initialization
func _ready() -> void:
	title = card_title
	health = card_health
	phys_attack = card_phys_attack
	mag_attack = card_mag_attack
	phys_defense = card_phys_defense
	mag_defense = card_mag_attack
	speed = card_speed
	tags = card_tags
	shifted_health = card_shifted_health
	shifted_phys_attack = card_shifted_phys_attack
	shifted_mag_attack = card_shifted_mag_attack
	shifted_phys_defense = card_shifted_phys_defense
	shifted_mag_defense = card_shifted_mag_attack
	shifted_speed = card_shifted_speed
	shifted_tags = card_shifted_tags
	pos_health = card_pos_health
	pos_phys_attack = card_pos_phys_attack
	pos_mag_attack = card_pos_mag_attack
	pos_phys_defense = card_pos_phys_defense
	pos_mag_defense = card_pos_mag_attack
	pos_speed = card_pos_speed
	pos_tags = card_pos_tags
	pref_pos = card_pref_pos
	default_color = card_default_color
	default_size = card_default_size
	if card_shifted:
		shift()
	friendly = card_friendly
	initialize()
#endregion

#region Actions
func default_action() -> void:
	var enemy = get_target()
	var damage = (Combat.RNG.randi_range(1,10)+phys_attack)
	var ability = Combat.RNG.randi_range(1,5)
	match ability:
		1:
			CombatLib.phys_attack(self, enemy, damage)
		2:
			CombatLib.phys_attack(self, enemy, damage+1)
		3:
			CombatLib.phys_attack(self, enemy, damage)
		4: 
			CombatLib.phys_attack(self, enemy, damage)
		5:
			CombatLib.phys_attack(self, enemy, damage)

#Should normally be called when standing in the front
#func front_action() -> void:
#	default_action()

#Should normally be called when standing in the center
#func center_action() -> void:
#	default_action()

#Should normally be called when standing in the center
#func back_action() -> void:
#	default_action()

#Should normally never be called as long as the card is in a slot
#func shifted_default_action() -> void:
#	default_action()

#Should normally be called when standing in the front
#func shifted_front_action() -> void:
#	default_action()

#Should normally be called when standing in the center
#func shifted_center_action() -> void:
#	default_action()

#Should normally be called when standing in the center
#func shifted_back_action() -> void:
#	default_action()
#endregion

#region Targeting
#func get_target() -> void:
#	if friendly:
#		if not shifted:
#			if pos == \"front\":
#				return Combat.get_target(Combat.opposing_party)
#			elif pos == \"center\":
#				return Combat.get_target(Combat.opposing_party)
#			elif pos == \"back\":
#				return Combat.get_target(Combat.opposing_party)
#			else:
#				return Combat.get_target(Combat.opposing_party)
#		else:
#			if pos == \"front\":
#				return Combat.get_target(Combat.opposing_party)
#			elif pos == \"center\":
#				return Combat.get_target(Combat.opposing_party)
#			elif pos == \"back\":
#				return Combat.get_target(Combat.opposing_party)
#			else:
#				return Combat.get_target(Combat.opposing_party)
#	else:
#		if not shifted:
#			if pos == \"front\":
#				return Combat.get_target(Combat.player_party)
#			elif pos == \"center\":
#				return Combat.get_target(Combat.player_party)
#			elif pos == \"back\":
#				return Combat.get_target(Combat.player_party)
#			else:
#				return Combat.get_target(Combat.player_party)
#		else:
#			if pos == \"front\":
#				return Combat.get_target(Combat.player_party)
#			elif pos == \"center\":
#			elif pos == \"back\":
#				return Combat.get_target(Combat.player_party)
#			else:
#				return Combat.get_target(Combat.player_party)
#endregion
"

[sub_resource type="SpriteFrames" id="SpriteFrames_6ow15"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": ExtResource("2_d4fxa")
}],
"loop": true,
"name": &"default",
"speed": 5.0
}]

[sub_resource type="RectangleShape2D" id="RectangleShape2D_dhksn"]
size = Vector2(1348, 1918)

[node name="Card" type="Area2D"]
script = SubResource("GDScript_pk2hl")

[node name="AnimatedSprite2D2" type="AnimatedSprite2D" parent="."]
scale = Vector2(0.1, 0.1)
sprite_frames = SubResource("SpriteFrames_6ow15")

[node name="Button" type="Button" parent="."]
modulate = Color(1, 1, 1, 0)
offset_left = -68.0
offset_top = -96.0
offset_right = 68.0
offset_bottom = 96.0
button_mask = 3

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
scale = Vector2(0.1, 0.1)
shape = SubResource("RectangleShape2D_dhksn")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
scale = Vector2(0.1, 0.1)
sprite_frames = SubResource("SpriteFrames_6ow15")

[node name="RichTextLabel" type="RichTextLabel" parent="."]
offset_left = -68.0
offset_top = 44.0
offset_right = 2652.0
offset_bottom = 1084.0
scale = Vector2(0.05, 0.05)
mouse_filter = 2
theme_override_font_sizes/normal_font_size = 200
script = ExtResource("3_lb2m7")

[connection signal="area_entered" from="." to="." method="_on_area_entered"]
[connection signal="area_exited" from="." to="." method="_on_area_exited"]
[connection signal="body_entered" from="." to="." method="_on_body_entered"]
[connection signal="body_exited" from="." to="." method="_on_body_exited"]
[connection signal="button_down" from="Button" to="." method="_on_button_down"]
[connection signal="button_up" from="Button" to="." method="_on_button_up"]
[connection signal="mouse_entered" from="Button" to="." method="_on_mouse_entered"]
[connection signal="mouse_exited" from="Button" to="." method="_on_mouse_exited"]
